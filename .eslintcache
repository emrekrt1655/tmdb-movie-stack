[{"C:\\Users\\emrek\\Desktop\\React Tekrar\\tmdb-project\\src\\index.js":"1","C:\\Users\\emrek\\Desktop\\React Tekrar\\tmdb-project\\src\\reportWebVitals.js":"2","C:\\Users\\emrek\\Desktop\\React Tekrar\\tmdb-project\\src\\App.js":"3","C:\\Users\\emrek\\Desktop\\React Tekrar\\tmdb-project\\src\\pages\\Signup\\Signup.js":"4","C:\\Users\\emrek\\Desktop\\React Tekrar\\tmdb-project\\src\\pages\\Signup\\Signup.style.js":"5","C:\\Users\\emrek\\Desktop\\React Tekrar\\tmdb-project\\src\\components\\Navbar\\Navbar.js":"6","C:\\Users\\emrek\\Desktop\\React Tekrar\\tmdb-project\\src\\components\\Navbar\\Navbar.style.js":"7","C:\\Users\\emrek\\Desktop\\React Tekrar\\tmdb-project\\src\\firebase\\firebase.utils.js":"8","C:\\Users\\emrek\\Desktop\\React Tekrar\\tmdb-project\\src\\pages\\Signin\\Signin.js":"9","C:\\Users\\emrek\\Desktop\\React Tekrar\\tmdb-project\\src\\pages\\Signin\\Signin.style.js":"10","C:\\Users\\emrek\\Desktop\\React Tekrar\\tmdb-project\\src\\Router\\Router.js":"11","C:\\Users\\emrek\\Desktop\\React Tekrar\\tmdb-project\\src\\router\\Router.js":"12","C:\\Users\\emrek\\Desktop\\React Tekrar\\tmdb-project\\src\\context\\AuthContext.js":"13","C:\\Users\\emrek\\Desktop\\React Tekrar\\tmdb-project\\src\\pages\\Main\\Main.js":"14","C:\\Users\\emrek\\Desktop\\React Tekrar\\tmdb-project\\src\\pages\\Main\\Main.style.js":"15","C:\\Users\\emrek\\Desktop\\React Tekrar\\tmdb-project\\src\\components\\CardList\\CardList.js":"16","C:\\Users\\emrek\\Desktop\\React Tekrar\\tmdb-project\\src\\helper\\utils.js":"17","C:\\Users\\emrek\\Desktop\\React Tekrar\\tmdb-project\\src\\components\\CardList\\Card.js":"18","C:\\Users\\emrek\\Desktop\\React Tekrar\\tmdb-project\\src\\components\\CardList\\Card.style.js":"19","C:\\Users\\emrek\\Desktop\\React Tekrar\\tmdb-project\\src\\components\\CardList\\Modal.js":"20","C:\\Users\\emrek\\Desktop\\React Tekrar\\tmdb-project\\src\\pages\\MovieDetail\\MovieDetail.js":"21","C:\\Users\\emrek\\Desktop\\React Tekrar\\tmdb-project\\src\\pages\\MovieDetail\\MovieDetail.style.js":"22","C:\\Users\\emrek\\Desktop\\React Tekrar\\tmdb-project\\src\\components\\DetailCard\\DetailCard.js":"23","C:\\Users\\emrek\\Desktop\\React Tekrar\\tmdb-project\\src\\components\\SearchBox\\SearchBox.js":"24","C:\\Users\\emrek\\Desktop\\React Tekrar\\tmdb-project\\src\\components\\SearchBox\\SearchBox.style.js":"25"},{"size":500,"mtime":1615236507120,"results":"26","hashOfConfig":"27"},{"size":362,"mtime":1615236507120,"results":"28","hashOfConfig":"27"},{"size":227,"mtime":1615761336215,"results":"29","hashOfConfig":"27"},{"size":3578,"mtime":1616022192089,"results":"30","hashOfConfig":"27"},{"size":631,"mtime":1616022061524,"results":"31","hashOfConfig":"27"},{"size":3450,"mtime":1616531389062,"results":"32","hashOfConfig":"27"},{"size":289,"mtime":1616248861223,"results":"33","hashOfConfig":"27"},{"size":1484,"mtime":1615811247929,"results":"34","hashOfConfig":"27"},{"size":3397,"mtime":1616022234132,"results":"35","hashOfConfig":"27"},{"size":631,"mtime":1616022104307,"results":"36","hashOfConfig":"27"},{"size":476,"mtime":1615758473159,"results":"37","hashOfConfig":"27"},{"size":931,"mtime":1616530932352,"results":"38","hashOfConfig":"27"},{"size":674,"mtime":1615808889593,"results":"39","hashOfConfig":"27"},{"size":1922,"mtime":1616281210540,"results":"40","hashOfConfig":"27"},{"size":285,"mtime":1616252034156,"results":"41","hashOfConfig":"27"},{"size":1156,"mtime":1616281228214,"results":"42","hashOfConfig":"27"},{"size":364,"mtime":1616248541860,"results":"43","hashOfConfig":"27"},{"size":3039,"mtime":1616256340590,"results":"44","hashOfConfig":"27"},{"size":1292,"mtime":1616256443463,"results":"45","hashOfConfig":"27"},{"size":879,"mtime":1616089549670,"results":"46","hashOfConfig":"27"},{"size":1250,"mtime":1616277018587,"results":"47","hashOfConfig":"27"},{"size":193,"mtime":1616098661179,"results":"48","hashOfConfig":"27"},{"size":3202,"mtime":1616276899972,"results":"49","hashOfConfig":"27"},{"size":753,"mtime":1616247882689,"results":"50","hashOfConfig":"27"},{"size":230,"mtime":1616247973202,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1asog1u",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"54"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"C:\\Users\\emrek\\Desktop\\React Tekrar\\tmdb-project\\src\\index.js",[],["109","110"],"C:\\Users\\emrek\\Desktop\\React Tekrar\\tmdb-project\\src\\reportWebVitals.js",[],"C:\\Users\\emrek\\Desktop\\React Tekrar\\tmdb-project\\src\\App.js",[],"C:\\Users\\emrek\\Desktop\\React Tekrar\\tmdb-project\\src\\pages\\Signup\\Signup.js",[],"C:\\Users\\emrek\\Desktop\\React Tekrar\\tmdb-project\\src\\pages\\Signup\\Signup.style.js",[],"C:\\Users\\emrek\\Desktop\\React Tekrar\\tmdb-project\\src\\components\\Navbar\\Navbar.js",["111","112"],"C:\\Users\\emrek\\Desktop\\React Tekrar\\tmdb-project\\src\\components\\Navbar\\Navbar.style.js",[],"C:\\Users\\emrek\\Desktop\\React Tekrar\\tmdb-project\\src\\firebase\\firebase.utils.js",[],"C:\\Users\\emrek\\Desktop\\React Tekrar\\tmdb-project\\src\\pages\\Signin\\Signin.js",[],"C:\\Users\\emrek\\Desktop\\React Tekrar\\tmdb-project\\src\\pages\\Signin\\Signin.style.js",[],"C:\\Users\\emrek\\Desktop\\React Tekrar\\tmdb-project\\src\\Router\\Router.js",[],"C:\\Users\\emrek\\Desktop\\React Tekrar\\tmdb-project\\src\\router\\Router.js",[],"C:\\Users\\emrek\\Desktop\\React Tekrar\\tmdb-project\\src\\context\\AuthContext.js",["113","114"],"import React, {createContext, useState, useEffect} from 'react'\r\nimport firebase from '../firebase/firebase.utils'\r\nexport const FireBaseAuthContext = createContext()\r\nfunction AuthContextProvider(props) { \r\n    const [isAuthenticated, setIsAuthenticated] = useState(false)\r\n    const [currentUser, setCurrentUser] = useState(false);\r\n    useEffect(()=> {\r\n        firebase.firebaseAuth.onAuthStateChanged((user)=> {\r\n            setCurrentUser(user);\r\n        });\r\n    }, []);\r\n    return (\r\n        <FireBaseAuthContext.Provider value={{currentUser}}>\r\n           {props.children} \r\n        </FireBaseAuthContext.Provider>\r\n    )\r\n}\r\n\r\nexport default AuthContextProvider\r\n","C:\\Users\\emrek\\Desktop\\React Tekrar\\tmdb-project\\src\\pages\\Main\\Main.js",["115"],"import React, { useState, useEffect } from \"react\";\r\nimport { Container, Typography, CircularProgress } from \"@material-ui/core\";\r\nimport { styles } from \"./Main.style\";\r\nimport CardList from \"../../components/CardList/CardList\";\r\nimport SearchBox from \"../../components/SearchBox/SearchBox\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../helper/utils\";\r\n\r\nfunction Main() {\r\n  const [movieData, setMovieData] = useState([]);\r\n  const [searchKeyword, setSearchKeyword] = useState(\"/movie\");\r\n  const [page, setPage] = useState(1);\r\n  const apiKey = process.env.REACT_APP_MOVIEAPI_KEY;\r\n\r\n  const getPostList = async () => {\r\n    const result = await axios.get(baseUrl, {\r\n      params: {\r\n        api_key: apiKey,\r\n        page: page,\r\n        query: searchKeyword, // TODO: from input\r\n      },\r\n    });\r\n    try {\r\n      setMovieData(\r\n        result?.data?.results)\r\n      }catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  \r\n  \r\n  const handleNextPage =  () => {\r\n    setPage(page + 1)\r\n\r\n  };\r\n  const handlePreviosPage =  () => {\r\n    setPage(page - 1)\r\n\r\n  };\r\n\r\n  useEffect(() => {\r\n    getPostList();\r\n  }, [searchKeyword, page]);\r\n\r\n  const Styles = styles();\r\n  return (\r\n    <Container className={Styles.wrapper}>\r\n      {!movieData ? (\r\n        <CircularProgress />\r\n      ) : (\r\n        <React.Fragment>\r\n          <Typography className={Styles.heading} variant=\"h3\" component=\"h3\">\r\n            Welcome to Movie Stack..\r\n          </Typography>\r\n          <SearchBox\r\n            searchKeyword={searchKeyword}\r\n            setPage={setPage}\r\n            setSearchKeyword={setSearchKeyword}\r\n          />\r\n          <CardList\r\n            movieData={movieData}\r\n            handleNextPage={handleNextPage}\r\n            handlePreviosPage = {handlePreviosPage}\r\n            page={page}\r\n          />\r\n        </React.Fragment>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","C:\\Users\\emrek\\Desktop\\React Tekrar\\tmdb-project\\src\\pages\\Main\\Main.style.js",[],"C:\\Users\\emrek\\Desktop\\React Tekrar\\tmdb-project\\src\\components\\CardList\\CardList.js",["116"],"import React from \"react\";\r\nimport Card from \"./Card\";\r\nimport { Grid, Button, TextField } from \"@material-ui/core\";\r\n\r\nfunction CardList({ movieData, handleNextPage, page, handlePreviosPage }) {\r\n  return (\r\n    <Grid >\r\n     \r\n      <Grid container spacing={3}>\r\n      {movieData &&\r\n        movieData?.map((movie) => {\r\n          return (\r\n            <Grid item xs={4} key={movie?.id}>\r\n              <Card movieData={movie}> {movie?.title} </Card>\r\n            </Grid>\r\n          );\r\n        })}\r\n        </Grid>\r\n        <Grid>\r\n        <div>\r\n        { page > 1 ?\r\n        <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  style={{margin:'1rem'}}\r\n                  onClick= {handlePreviosPage}\r\n          >\r\n            Previous Page\r\n          </Button> : null\r\n          }\r\n        <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  style={{margin:'1rem'}}\r\n                  onClick= {handleNextPage}\r\n          >\r\n            Next Page\r\n          </Button>\r\n          </div>\r\n        </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default CardList;\r\n","C:\\Users\\emrek\\Desktop\\React Tekrar\\tmdb-project\\src\\helper\\utils.js",[],"C:\\Users\\emrek\\Desktop\\React Tekrar\\tmdb-project\\src\\components\\CardList\\Card.js",[],"C:\\Users\\emrek\\Desktop\\React Tekrar\\tmdb-project\\src\\components\\CardList\\Card.style.js",[],"C:\\Users\\emrek\\Desktop\\React Tekrar\\tmdb-project\\src\\components\\CardList\\Modal.js",[],"C:\\Users\\emrek\\Desktop\\React Tekrar\\tmdb-project\\src\\pages\\MovieDetail\\MovieDetail.js",["117"],"import React, {useEffect, useState} from 'react'\r\nimport {  Container, CircularProgress } from \"@material-ui/core\";\r\nimport { styles } from \"./MovieDetail.style\";\r\nimport axios from 'axios'\r\nimport {movieDetailBaseUrl } from '../../helper/utils'\r\nimport {useParams} from 'react-router-dom'\r\nimport DetailCard from '../../components/DetailCard/DetailCard'\r\n\r\n\r\n\r\n\r\n\r\nfunction MovieDetail() {\r\n    const [movieDetailData, setMovieDetailData] = useState()\r\n    const apiKey = process.env.REACT_APP_MOVIEAPI_KEY\r\n    const {id} = useParams();\r\n    const Styles = styles();\r\n\r\n\r\nconst getDetailPost = async () => {\r\n    const result = await axios.get(movieDetailBaseUrl+id, {\r\n        params: {\r\n            api_key: apiKey,\r\n           \r\n        }}) \r\n        try {\r\n            setMovieDetailData(result?.data)\r\n          } catch(err) {\r\n            console.log(err)\r\n          }    \r\n       \r\n}\r\n\r\n\r\n\r\nuseEffect(() => {\r\n    getDetailPost();\r\n}, [])\r\n\r\n\r\n\r\n    return (\r\n        <Container className={Styles.wrapper}>\r\n            {\r\n                !movieDetailData ? <CircularProgress/>\r\n                :  <DetailCard movie={movieDetailData}/>\r\n            }\r\n            \r\n           \r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default MovieDetail\r\n","C:\\Users\\emrek\\Desktop\\React Tekrar\\tmdb-project\\src\\pages\\MovieDetail\\MovieDetail.style.js",[],"C:\\Users\\emrek\\Desktop\\React Tekrar\\tmdb-project\\src\\components\\DetailCard\\DetailCard.js",["118","119"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\nimport Container from '@material-ui/core/Container'\r\nimport { baseImageUrl, noPhotoAvailable } from \"../../helper/utils\";\r\n\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n  root: {\r\n    maxWidth: 745,\r\n    margin: 'auto'\r\n  },\r\n  media: {\r\n    height: 340,\r\n  },\r\n  lang : {\r\n    textTransform: 'capitalize',\r\n    marginRight: '0.9rem'\r\n  },\r\n  spann: {\r\n    color:theme.palette.secondary.main\r\n  },\r\n  langfam:{\r\n    display:'flex',\r\n    flexDirection:'row',\r\n  },\r\n  div1:{\r\n      display:'flex',\r\n      justifyContent: 'space-between'\r\n\r\n  },\r\n\r\n}));\r\n\r\nexport default function MediaCard({movie}) {\r\n  const classes = useStyles();\r\n  const image = baseImageUrl + movie?.poster_path;\r\n  \r\n  return (\r\n    \r\n    <Card className={classes.root}>\r\n      <div>\r\n        <CardMedia\r\n          className={classes.media}\r\n          image={image ? image : noPhotoAvailable}\r\n        />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n          {movie?.title}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            {movie?.overview}\r\n          </Typography>\r\n          <div className={classes.div1}>\r\n          <Typography className={classes.lang} variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          Language: <span className={classes.spann}> {movie?.spoken_languages[0]?.english_name} </span>\r\n          </Typography>\r\n          <Typography className={classes.lang} variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          Kind: {movie?.adult ?<span className={classes.spann}> Adult </span> : <span className={classes.spann}> Family </span> }\r\n          </Typography>\r\n          <Typography className={classes.lang} variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          Release Date: <span className={classes.spann}> {movie?.release_date} </span>\r\n          </Typography>\r\n          </div>\r\n          <div className={classes.div1}>\r\n          <Typography className={classes.lang} variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          Vote Average: <span className={classes.spann}> {movie?.vote_average} </span>\r\n          </Typography>\r\n          <Typography className={classes.lang} variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          Votes: <span className={classes.spann}> {movie?.vote_count} </span>\r\n          </Typography>\r\n          <Typography className={classes.lang} variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          Genres: <span className={classes.spann}>{movie?.genres[0]?.name ? movie?.genres[0]?.name + ', ' + movie?.genres[1]?.name : null } </span>\r\n          </Typography>\r\n          </div>\r\n        <a href={movie?.homepage} >\r\n            Please click to send the movie homepage...\r\n        </a>\r\n        </CardContent>\r\n      </div>\r\n    </Card>\r\n   \r\n  );\r\n}\r\n\r\n","C:\\Users\\emrek\\Desktop\\React Tekrar\\tmdb-project\\src\\components\\SearchBox\\SearchBox.js",["120","121","122"],"import React, {useRef} from 'react'\r\nimport {TextField} from '@material-ui/core'\r\nimport {styles} from './SearchBox.style'\r\n\r\nfunction SearchBox({setSearchKeyword, setPage, SearchKeyword}) {\r\n    const classes = styles();\r\n   \r\n    const onSearch = (event) => {\r\n        setSearchKeyword(event?.target?.value)\r\n        \r\n    }\r\n    \r\n    {\r\n        SearchKeyword == '' && setSearchKeyword('movie') \r\n    }\r\n\r\n    return (\r\n        <div className={classes.wrapper} >\r\n        \r\n             <TextField className={classes.input} \r\n              id=\"outlined-basic\" label=\"Search Movie\" \r\n              variant=\"outlined\" \r\n             \r\n              onChange={onSearch}\r\n            />\r\n        \r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default SearchBox\r\n","C:\\Users\\emrek\\Desktop\\React Tekrar\\tmdb-project\\src\\components\\SearchBox\\SearchBox.style.js",[],{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","severity":1,"message":"128","line":19,"column":10,"nodeType":"129","messageId":"130","endLine":19,"endColumn":14},{"ruleId":"127","severity":1,"message":"131","line":24,"column":9,"nodeType":"129","messageId":"130","endLine":24,"endColumn":21},{"ruleId":"127","severity":1,"message":"132","line":5,"column":12,"nodeType":"129","messageId":"130","endLine":5,"endColumn":27},{"ruleId":"127","severity":1,"message":"133","line":5,"column":29,"nodeType":"129","messageId":"130","endLine":5,"endColumn":47},{"ruleId":"134","severity":1,"message":"135","line":44,"column":6,"nodeType":"136","endLine":44,"endColumn":27,"suggestions":"137"},{"ruleId":"127","severity":1,"message":"138","line":3,"column":24,"nodeType":"129","messageId":"130","endLine":3,"endColumn":33},{"ruleId":"134","severity":1,"message":"139","line":38,"column":4,"nodeType":"136","endLine":38,"endColumn":6,"suggestions":"140"},{"ruleId":"127","severity":1,"message":"141","line":7,"column":8,"nodeType":"129","messageId":"130","endLine":7,"endColumn":24},{"ruleId":"127","severity":1,"message":"142","line":8,"column":8,"nodeType":"129","messageId":"130","endLine":8,"endColumn":17},{"ruleId":"127","severity":1,"message":"143","line":1,"column":16,"nodeType":"129","messageId":"130","endLine":1,"endColumn":22},{"ruleId":"144","severity":1,"message":"145","line":13,"column":5,"nodeType":"146","messageId":"147","endLine":15,"endColumn":6},{"ruleId":"148","severity":1,"message":"149","line":14,"column":23,"nodeType":"150","messageId":"151","endLine":14,"endColumn":25},"no-native-reassign",["152"],"no-negated-in-lhs",["153"],"no-unused-vars","'auth' is assigned a value but never used.","Identifier","unusedVar","'handleChange' is assigned a value but never used.","'isAuthenticated' is assigned a value but never used.","'setIsAuthenticated' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getPostList'. Either include it or remove the dependency array.","ArrayExpression",["154"],"'TextField' is defined but never used.","React Hook useEffect has a missing dependency: 'getDetailPost'. Either include it or remove the dependency array.",["155"],"'CircularProgress' is defined but never used.","'Container' is defined but never used.","'useRef' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"156","fix":"157"},{"desc":"158","fix":"159"},"Update the dependencies array to be: [searchKeyword, page, getPostList]",{"range":"160","text":"161"},"Update the dependencies array to be: [getDetailPost]",{"range":"162","text":"163"},[1137,1158],"[searchKeyword, page, getPostList]",[944,946],"[getDetailPost]"]